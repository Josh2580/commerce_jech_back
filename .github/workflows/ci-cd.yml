name: Server Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Set environment variables from secrets for the database configuration
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      MY_SECRET_KEY: ${{ secrets.MY_SECRET_KEY }}
      MY_DATABASE_NAME: ${{ secrets.MY_DATABASE_NAME }}
      MY_DATABASE_USER: ${{ secrets.MY_DATABASE_USER }}
      MY_DATABASE_PASSWORD: ${{ secrets.MY_DATABASE_PASSWORD }}
      MY_DATABASE_HOST: ${{ secrets.MY_DATABASE_HOST }}
      MY_DATABASE_PORT: ${{ secrets.MY_DATABASE_PORT }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      # Step 1: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} # Update this if your region is different

      # Step 2: Log in to Amazon ECR # docker build -t my-backend-app .

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker build -t  ${{ secrets.ECR_BACKEND_REPOSITORY_NAME }} .
          docker tag my-backend-app:latest ${{ secrets.ECR_REPOSITORY_URI }}
          docker push ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_BACKEND_SERVICE_NAME }} --force-new-deployment
